import re
import time
import pyautogui
time.sleep(3)
surcharge_percentage = 10  # 10% surcharge

data = '''
US PRESIDENTIAL ELECTION 2024 WINNER - JUN 29
US PRESIDENTIAL ELECTION 2024 WINNER
US PRESIDENTIAL ELECTION 2024 WINNER
US PRESIDENTIAL ELECTION 2024 WINNER
JUN 29 - 7:00 AM

ROT

DESCRIPTION

ODDS


540001

** ALL ACTION **
540002

KAMALA HARRIS
540003

JOE BIDEN
540004

DONALD TRUMP
540005

NIKKI HALEY
540006

MIKE PENCE
540008

IVANKA TRUMP
540009

DWAYNE JOHNSON
540010

TUCKER CARLSON
540011

MICHELLE OBAMA
540012

TED CRUZ
540013

PETE BUTTIGIEG
540014

JOHN KASICH
540015

ELIZABETH WARREN
540016

CHARLIE BAKER
540017

TOM COTTON
540018

ANDREW CUOMO
540019

JOSH HAWLEY
540020

DAN CRENSHAW
540021

GAVIN NEWSOM
540022

CANDACE OWENS
540023

AMY KLOBUCHAR
540024

MARCO RUBIO
540025

ANDREW YANG
540026

PAUL RYAN
540027

MIKE POMPEO
540028

BETO OROURKE
540031

GRETCHEN WHITMER
540033

KANYE WEST
540034

OPRAH WINFREY
540035

HILLARY CLINTON
540036

MITT ROMNEY
540037

BERNIE SANDERS
540038

DONALD TRUMP JR
540039

RAND PAUL
540040

RON DESANTIS
540041

TOM BRADY
540042

TIM SCOTT
540043

ADAM KINZINGER
540044

AL GORE
540045

ALEXANDRIA OCASIO-CORTEZ
540046

ANN COULTER
540047

AYANNA PRESSLEY
540048

BEN CARSON
540049

BEN SASSE
540050

BEN SHAPIRO
540051

BILL GATES
540052

BILL MAHER
540053

BLAKE MASTERS
540054

BRIAN KEMP
540055

BRUCE CAMPBELL
540056

CAROLINE KENNEDY
540057

CHRIS CHRISTIE
540058

CHRIS SUNUNU
540059

CONAN OBRIEN
540060

CORY BOOKER
540061

DEVIN NUNES
540062

ERIC ADAMS
540063

ERIC GARCETTI
540064

ERIC TRUMP
540065

FRANCIS X. SUAREZ
540066

GEORGE CLOONEY
540067

GLENN YOUNGKIN
540068

GRANT CARDONE
540069

GREG ABBOTT
540070

J.D. VANCE
540071

JAMIE DIMON
540072

JARED KUSHNER
540073

JEFF BEZOS
540074

JERRY JONES
540075

JIM JORDAN
540076

JOE MANCHIN
540077

JOE ROGAN
540078

JOHN FETTERMAN
540079

JOHN FLANDERS KENNEDY
540080

JON OSSOFF
540081

JON STEWART
540082

KARI LAKE
540083

KATIE PORTER
540084

KAYLEIGH MCENANY
540086

KEVIN HART
540087

KEVIN MCCARTHY
540088

KIMBERLY GUILFOYLE
540089

KIRSTEN GILLIBRAND
540090

KRISTI NOEM
540091

LARA TRUMP
540092

LARRY ELDER
540093

LARRY HOGAN
540094

LEBRON JAMES
540095

LIZ CHENEY
540096

MARIANNE WILLIAMSON
540097

MARK CUBAN
540098

MARK KELLY
540099

MARSHA BLACKBURN
540100

MATT GAETZ
540101

MATTHEW MCCONAUGHEY
540102

MAURA HEALEY
540103

MEGHAN MARKLE
540104

MICHAEL BLOOMBERG
540105

MICHAEL FLYNN
540106

MICHAEL JORDAN
540107

MITCH MCCONNELL
540108

NANCY PELOSI
540109

NINA TURNER
540110

RICK SCOTT
540111

ROBERT KENNEDY JR
540112

RONNIE COLEMAN
540113

ROY COOPER
540114

SHERROD BROWN
540115

STACEY ABRAMS
540116

STEPHEN COLBERT
540117

STEVE CHAVEZ LODGE
540118

SUSAN COLLINS
540120

TAMMY DUCKWORTH
540121

THEO VON
540122

TIM RYAN
540125

VIVEK RAMASWAMY
540126

WES MOORE
540127

TULSI GABBARD

'''


odds_data = '''
JOE BIDEN
+150
DONALD TRUMP
+240
RON DESANTIS
+550
ROBERT KENNEDY JR.
+1200
GAVIN NEWSOM
+1200
MICHELLE OBAMA
+3300
KAMALA HARRIS
+3300
NIKKI HALEY
+5000
TIM SCOTT
+5000
MIKE PENCE
+6600
GLENN YOUNGKIN
+6600
VIVEK RAMASWAMY
+10000
PETE BUTTIGIEG
+10000
JAMIE DIMON
+10000
BRIAN KEMP
+10000
ELIZABETH WARREN
+10000
ALEXANDRIA OCASIO-CORTEZ
+10000
TULSI GABBARD
+10000
BERNIE SANDERS
+10000
JOE MANCHIN
+10000
MICHAEL FLYNN
+10000
CANDACE OWENS
+10000
BEN CARSON
+10000
MARK CUBAN
+10000
STACEY ABRAMS
+10000
GRANT CARDONE
+10000
FRANCIS X. SUAREZ
+10000
NANCY PELOSI
+10000
LIZ CHENEY
+10000
MAURA HEALEY
+10000
AMY KLOBUCHAR
+10000
SUSAN RICE
+10000
DOUG BURGUM
+10000
MARIANNE WILLIAMSON
+10000
TUCKER CARLSON
+12500
GRETCHEN WHITMER
+12500
HILLARY CLINTON
+12500
CHRIS CHRISTIE
+12500
'''

def enterodd():
    pyautogui.press('enter')
    pyautogui.typewrite(str(int(odd)))
    pyautogui.press('enter')
    pyautogui.press('down')
def deleteodd():
    pyautogui.press('enter')
    pyautogui.press('del')
    pyautogui.press('enter')
    pyautogui.press('down')

names = re.findall(r'\n\d+\n\n(.+)', data)
odds = re.findall(r'(.+)\n([-+]?\d+)', odds_data)
odds_dict = {}

for name, odd in odds:
    if 100 <= int(odd) <= 110:
        surcharged_odd = min(int(odd) + int(odd) * (surcharge_percentage / 100), 10000) * -1
    else:
        if int(odd) > 100:
            surcharged_odd = min(int(odd) - int(odd) * (surcharge_percentage / 100), 10000)
        elif int(odd) < -100:
            surcharged_odd = min(int(odd) + int(odd) * (surcharge_percentage / 100), 10000)
        else:
            surcharged_odd = (int(odd) * -1) * (surcharge_percentage / 100)
    odds_dict[name] = surcharged_odd

# Print the first list of names
print("First List:")
for name in names:
    print(name)

# Print the second list of names and odds
print("\nSecond List:")
for name in names:
    odd = odds_dict.get(name.strip())
    if odd is not None:
        print(f"{name}: {odd}")
        enterodd()
    else:
        print(f"{name}: NONE")
        deleteodd()









